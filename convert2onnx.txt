torch out: tensor([[ 3.1352, -0.9791, -0.9125, -2.2732],
        [ 2.6793, -1.6151,  0.0857, -2.1150],
        [ 2.3473, -1.3048, -0.7288, -0.8215],
        [ 2.3183, -1.2247, -0.0813, -1.4272],
        [ 2.3760, -0.2943, -0.9733, -1.9743],
        [ 4.8628, -1.4641, -1.0506, -1.9000],
        [ 2.7585, -1.3780, -0.2777, -1.5512],
        [ 2.9262, -1.7123, -1.0911, -0.6975],
        [ 2.9880, -2.1705, -0.0982, -0.8951],
        [ 3.1081, -1.9262, -0.6877, -1.5590],
        [ 4.1434, -1.4588, -1.5265, -2.2871],
        [ 1.5713, -0.9945, -0.7733, -1.7327],
        [ 3.7092, -0.6280, -0.8413, -1.4704],
        [ 5.2158, -2.5572, -1.4942, -2.5322],
        [ 2.2209, -1.0638, -1.5109, -0.7879],
        [ 2.7708, -1.7047, -1.4136, -1.7320],
        [ 2.3378, -0.6109, -0.8411, -1.8439],
        [ 3.1684, -1.6486, -1.0706, -1.1863],
        [ 4.7792, -1.5674, -1.9566, -2.4571],
        [ 1.4194, -0.7852, -0.3578, -1.4342],
        [ 4.1395, -1.5724, -0.8587, -1.7457],
        [ 3.3027, -1.0225, -1.3916, -1.7760],
        [ 3.4057, -1.6404, -0.6605, -2.3737],
        [ 2.5660, -1.2794, -0.3567, -1.2887],
        [ 3.3843, -1.6492, -1.4063, -1.1528],
        [ 3.2355, -0.9184, -0.9584, -2.0240],
        [ 1.7467,  0.2181, -0.8388, -2.1217],
        [ 2.2396, -1.0484, -0.5951, -0.7492],
        [ 1.7273, -0.8997, -0.0680, -1.2124],
        [ 4.1636, -1.3323, -1.8848, -2.4763],
        [ 2.8545, -1.6746, -0.9076, -1.2450],
        [ 4.2674, -1.2974, -1.0086, -1.6679],
        [ 3.1065, -0.3967, -0.6374, -1.7580],
        [ 2.8520, -2.0695, -1.2018, -0.6421],
        [ 3.9133, -1.6804, -0.3875, -0.7392],
        [ 1.3620, -1.5672,  0.8956, -0.9195],
        [ 2.6373, -0.4649, -0.9748, -1.0080],
        [ 3.6578, -2.7155, -0.1862, -1.4350],
        [ 3.1964, -0.9949, -1.6657, -2.4110],
        [ 3.4183, -2.5081, -1.3986, -2.8443],
        [ 4.0616, -2.1893, -1.7323, -1.1218],
        [ 2.9423, -1.8365, -0.0356, -2.2714],
        [ 1.3383, -0.1594, -1.4206, -1.0692],
        [ 2.6543, -0.2423, -1.6240, -1.2764],
        [ 4.4275, -1.6006, -1.7523, -1.9743],
        [ 3.7782, -1.4014, -1.6321, -2.4507],
        [ 3.4930, -1.0763, -0.9943, -2.4765],
        [ 2.7201, -0.7249, -0.1909, -2.4224],
        [ 2.3670, -1.7472, -0.2970, -1.6058],
        [ 4.7999, -1.5894, -0.9600, -3.3667],
        [ 3.2610, -1.2583, -1.0510, -1.1806],
        [ 2.4987, -1.7163, -1.0646, -0.7070],
        [ 2.8463, -1.2692, -1.5616,  0.1867],
        [ 3.3623, -1.8401, -0.5366, -2.1528],
        [ 3.3477, -0.7323, -0.3681, -2.2193],
        [ 3.1680, -0.8768, -0.8756, -1.5419],
        [ 3.0059, -1.5527, -0.7637, -1.3688],
        [ 3.6310, -1.0977, -1.5369, -2.5503],
        [ 2.3679, -0.5691, -0.4952, -1.9474],
        [ 3.8138, -2.3850, -1.3395, -1.5668],
        [ 2.0686, -1.3515, -0.0384, -1.3026],
        [ 2.1725, -0.6049, -0.1166, -2.1904],
        [ 1.9434, -0.9469,  0.3143, -0.9661],
        [ 3.0174, -0.3496, -1.8538, -1.2933]], device='cuda:0')
graph(%input : Float(64:50176, 1:50176, 224:224, 224:1, requires_grad=0, device=cpu),
      %cls.0.weight : Float(4:512, 512:1, requires_grad=1, device=cpu),
      %cls.0.bias : Float(4:1, requires_grad=1, device=cpu),
      %202 : Float(64:49, 1:49, 7:7, 7:1, requires_grad=0, device=cpu),
      %203 : Float(64:1, requires_grad=0, device=cpu),
      %205 : Float(64:576, 64:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %206 : Float(64:1, requires_grad=0, device=cpu),
      %208 : Float(64:576, 64:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %209 : Float(64:1, requires_grad=0, device=cpu),
      %211 : Float(64:576, 64:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %212 : Float(64:1, requires_grad=0, device=cpu),
      %214 : Float(64:576, 64:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %215 : Float(64:1, requires_grad=0, device=cpu),
      %217 : Float(128:576, 64:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %218 : Float(128:1, requires_grad=0, device=cpu),
      %220 : Float(128:1152, 128:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %221 : Float(128:1, requires_grad=0, device=cpu),
      %223 : Float(128:64, 64:1, 1:1, 1:1, requires_grad=0, device=cpu),
      %224 : Float(128:1, requires_grad=0, device=cpu),
      %226 : Float(128:1152, 128:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %227 : Float(128:1, requires_grad=0, device=cpu),
      %229 : Float(128:1152, 128:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %230 : Float(128:1, requires_grad=0, device=cpu),
      %232 : Float(256:1152, 128:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %233 : Float(256:1, requires_grad=0, device=cpu),
      %235 : Float(256:2304, 256:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %236 : Float(256:1, requires_grad=0, device=cpu),
      %238 : Float(256:128, 128:1, 1:1, 1:1, requires_grad=0, device=cpu),
      %239 : Float(256:1, requires_grad=0, device=cpu),
      %241 : Float(256:2304, 256:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %242 : Float(256:1, requires_grad=0, device=cpu),
      %244 : Float(256:2304, 256:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %245 : Float(256:1, requires_grad=0, device=cpu),
      %247 : Float(512:2304, 256:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %248 : Float(512:1, requires_grad=0, device=cpu),
      %250 : Float(512:4608, 512:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %251 : Float(512:1, requires_grad=0, device=cpu),
      %253 : Float(512:256, 256:1, 1:1, 1:1, requires_grad=0, device=cpu),
      %254 : Float(512:1, requires_grad=0, device=cpu),
      %256 : Float(512:4608, 512:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %257 : Float(512:1, requires_grad=0, device=cpu),
      %259 : Float(512:4608, 512:9, 3:3, 3:1, requires_grad=0, device=cpu),
      %260 : Float(512:1, requires_grad=0, device=cpu)):
  %201 : Float(64:802816, 64:12544, 112:112, 112:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[7, 7], pads=[3, 3, 3, 3], strides=[2, 2]](%input, %202, %203)
  %125 : Float(64:802816, 64:12544, 112:112, 112:1, requires_grad=1, device=cpu) = onnx::Relu(%201) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %126 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::MaxPool[kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%125) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:586:0
  %204 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%126, %205, %206)
  %129 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Relu(%204) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %207 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%129, %208, %209)
  %132 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Add(%207, %126)
  %133 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Relu(%132) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %210 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%133, %211, %212)
  %136 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Relu(%210) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %213 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%136, %214, %215)
  %139 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Add(%213, %133)
  %140 : Float(64:200704, 64:3136, 56:56, 56:1, requires_grad=1, device=cpu) = onnx::Relu(%139) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %216 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%140, %217, %218)
  %143 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Relu(%216) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %219 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%143, %220, %221)
  %222 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%140, %223, %224)
  %148 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Add(%219, %222)
  %149 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Relu(%148) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %225 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%149, %226, %227)
  %152 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Relu(%225) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %228 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%152, %229, %230)
  %155 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Add(%228, %149)
  %156 : Float(64:100352, 128:784, 28:28, 28:1, requires_grad=1, device=cpu) = onnx::Relu(%155) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %231 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%156, %232, %233)
  %159 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Relu(%231) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %234 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%159, %235, %236)
  %237 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%156, %238, %239)
  %164 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Add(%234, %237)
  %165 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Relu(%164) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %240 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%165, %241, %242)
  %168 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Relu(%240) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %243 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%168, %244, %245)
  %171 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Add(%243, %165)
  %172 : Float(64:50176, 256:196, 14:14, 14:1, requires_grad=1, device=cpu) = onnx::Relu(%171) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %246 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[2, 2]](%172, %247, %248)
  %175 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Relu(%246) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %249 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%175, %250, %251)
  %252 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[1, 1], pads=[0, 0, 0, 0], strides=[2, 2]](%172, %253, %254)
  %180 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Add(%249, %252)
  %181 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Relu(%180) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %255 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%181, %256, %257)
  %184 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Relu(%255) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %258 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Conv[dilations=[1, 1], group=1, kernel_shape=[3, 3], pads=[1, 1, 1, 1], strides=[1, 1]](%184, %259, %260)
  %187 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Add(%258, %181)
  %188 : Float(64:25088, 512:49, 7:7, 7:1, requires_grad=1, device=cpu) = onnx::Relu(%187) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1134:0
  %189 : Float(64:512, 512:1, 1:1, 1:1, requires_grad=1, device=cpu) = onnx::GlobalAveragePool(%188) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:936:0
  %190 : Tensor = onnx::Shape(%189)
  %191 : Tensor = onnx::Constant[value={0}]()
  %192 : Long(device=cpu) = onnx::Gather[axis=0](%190, %191) # /home/czx/simple-gesture-classification/model.py:17:0
  %193 : Tensor = onnx::Shape(%189)
  %194 : Tensor = onnx::Constant[value={1}]()
  %195 : Long(device=cpu) = onnx::Gather[axis=0](%193, %194) # /home/czx/simple-gesture-classification/model.py:17:0
  %196 : Tensor = onnx::Unsqueeze[axes=[0]](%192)
  %197 : Tensor = onnx::Unsqueeze[axes=[0]](%195)
  %198 : Tensor = onnx::Concat[axis=0](%196, %197)
  %199 : Float(64:512, 512:1, requires_grad=1, device=cpu) = onnx::Reshape(%189, %198) # /home/czx/simple-gesture-classification/model.py:17:0
  %output : Float(64:4, 4:1, requires_grad=1, device=cpu) = onnx::Gemm[alpha=1., beta=1., transB=1](%199, %cls.0.weight, %cls.0.bias) # /home/czx/.conda/envs/clip/lib/python3.7/site-packages/torch/nn/functional.py:1690:0
  return (%output)

/home/czx/simple-gesture-classification/cls.onnx
onnx out: tensor([[ 3.1352, -0.9791, -0.9125, -2.2732],
        [ 2.6793, -1.6151,  0.0857, -2.1150],
        [ 2.3473, -1.3048, -0.7288, -0.8215],
        [ 2.3183, -1.2247, -0.0813, -1.4272],
        [ 2.3760, -0.2943, -0.9733, -1.9743],
        [ 4.8628, -1.4641, -1.0506, -1.9000],
        [ 2.7585, -1.3780, -0.2777, -1.5512],
        [ 2.9262, -1.7123, -1.0911, -0.6975],
        [ 2.9880, -2.1705, -0.0982, -0.8951],
        [ 3.1081, -1.9262, -0.6877, -1.5590],
        [ 4.1434, -1.4588, -1.5265, -2.2871],
        [ 1.5713, -0.9945, -0.7733, -1.7327],
        [ 3.7092, -0.6280, -0.8413, -1.4704],
        [ 5.2158, -2.5572, -1.4942, -2.5322],
        [ 2.2209, -1.0638, -1.5109, -0.7879],
        [ 2.7708, -1.7047, -1.4136, -1.7320],
        [ 2.3378, -0.6109, -0.8411, -1.8439],
        [ 3.1684, -1.6486, -1.0706, -1.1863],
        [ 4.7792, -1.5674, -1.9566, -2.4571],
        [ 1.4194, -0.7852, -0.3578, -1.4342],
        [ 4.1395, -1.5724, -0.8587, -1.7457],
        [ 3.3027, -1.0225, -1.3916, -1.7760],
        [ 3.4057, -1.6404, -0.6605, -2.3737],
        [ 2.5660, -1.2794, -0.3567, -1.2887],
        [ 3.3843, -1.6492, -1.4063, -1.1528],
        [ 3.2355, -0.9184, -0.9584, -2.0240],
        [ 1.7467,  0.2181, -0.8388, -2.1217],
        [ 2.2396, -1.0484, -0.5951, -0.7492],
        [ 1.7273, -0.8997, -0.0680, -1.2124],
        [ 4.1636, -1.3323, -1.8848, -2.4763],
        [ 2.8545, -1.6746, -0.9076, -1.2450],
        [ 4.2674, -1.2974, -1.0086, -1.6679],
        [ 3.1065, -0.3967, -0.6374, -1.7580],
        [ 2.8520, -2.0695, -1.2018, -0.6421],
        [ 3.9133, -1.6804, -0.3875, -0.7392],
        [ 1.3620, -1.5672,  0.8956, -0.9195],
        [ 2.6373, -0.4649, -0.9748, -1.0080],
        [ 3.6578, -2.7155, -0.1862, -1.4350],
        [ 3.1964, -0.9949, -1.6657, -2.4110],
        [ 3.4183, -2.5081, -1.3986, -2.8443],
        [ 4.0616, -2.1893, -1.7323, -1.1218],
        [ 2.9423, -1.8365, -0.0356, -2.2714],
        [ 1.3383, -0.1594, -1.4206, -1.0692],
        [ 2.6543, -0.2423, -1.6240, -1.2764],
        [ 4.4275, -1.6006, -1.7523, -1.9743],
        [ 3.7782, -1.4014, -1.6321, -2.4507],
        [ 3.4930, -1.0763, -0.9943, -2.4765],
        [ 2.7201, -0.7249, -0.1909, -2.4224],
        [ 2.3670, -1.7472, -0.2970, -1.6058],
        [ 4.7999, -1.5894, -0.9600, -3.3667],
        [ 3.2610, -1.2583, -1.0510, -1.1806],
        [ 2.4987, -1.7163, -1.0646, -0.7070],
        [ 2.8463, -1.2692, -1.5616,  0.1867],
        [ 3.3623, -1.8401, -0.5366, -2.1528],
        [ 3.3477, -0.7323, -0.3681, -2.2193],
        [ 3.1680, -0.8768, -0.8756, -1.5419],
        [ 3.0059, -1.5527, -0.7637, -1.3688],
        [ 3.6310, -1.0977, -1.5369, -2.5503],
        [ 2.3679, -0.5691, -0.4952, -1.9474],
        [ 3.8138, -2.3850, -1.3395, -1.5668],
        [ 2.0686, -1.3515, -0.0384, -1.3026],
        [ 2.1725, -0.6049, -0.1166, -2.1904],
        [ 1.9434, -0.9469,  0.3143, -0.9661],
        [ 3.0174, -0.3496, -1.8538, -1.2933]], device='cuda:0')
